{"version":3,"file":"types.js","names":[],"sources":["../src/types.js"],"sourcesContent":["// @flow\n\n/* eslint-disable import/exports-last */\n\nimport {\n  Agent as HttpAgent,\n} from 'http';\nimport {\n  Agent as HttpsAgent,\n} from 'https';\nimport type {\n  Page,\n  Request,\n} from 'puppeteer';\n\nexport interface ProxyUrl {\n  http?: string,\n  https?: string,\n}\n\nexport type HeadersType = {\n  +[key: string]: string,\n  ...\n};\n\n/**\n * @property agent HTTP(s) agent to use when making the request.\n * @property page Instance of Puppeteer Page.\n * @property proxyUrl HTTP proxy URL. A different proxy can be set for each request.\n * @property request Instance of Puppeteer Request.\n */\nexport type ProxyRequestConfigurationType = {|\n  +agent?: HttpAgent | HttpsAgent,\n  +page: Page,\n  +proxyUrl?: ProxyUrl | string,\n  +request: Request,\n|};\n\n/**\n * These are cookies obtained using `page.cookies()` method.\n *\n * @see https://pptr.dev/#?product=Puppeteer&version=v2.0.0&show=api-pagecookiesurls\n */\nexport type PuppeteerCookieType = {|\n  +domain: string,\n  +expires: number,\n  +httpOnly: boolean,\n  +name: string,\n  +path: string,\n  +sameSite: 'Strict' | 'Lax' | 'Extended' | 'None',\n  +secure: boolean,\n  +session: boolean,\n  +size: number,\n  +value: string,\n|};\n\nexport type ToughCookiePayloadType = {|\n  +creation: string,\n  +domain: string,\n  +expires: number | string,\n  +hostOnly: boolean,\n  +httpOnly: boolean,\n  +key: string,\n  +lastAccessed: string,\n  +path: string,\n  +secure: boolean,\n  +value: string,\n|};\n"],"mappings":";;AAIA;AAGA"}